#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (1.0.0-dev)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] == 3:
  from urllib.parse import urlparse
else:
  from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from gen.apache.aurora.api import ReadOnlyScheduler
from gen.apache.aurora.api.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  Response getRoleSummary()')
  print('  Response getJobSummary(string role)')
  print('  Response getTasksStatus(TaskQuery query)')
  print('  Response getTasksWithoutConfigs(TaskQuery query)')
  print('  Response getPendingReason(TaskQuery query)')
  print('  Response getConfigSummary(JobKey job)')
  print('  Response getJobs(string ownerRole)')
  print('  Response getQuota(string ownerRole)')
  print('  Response populateJobConfig(JobConfiguration description)')
  print('  Response getLocks()')
  print('  Response getJobUpdateSummaries(JobUpdateQuery jobUpdateQuery)')
  print('  Response getJobUpdateDetails(JobUpdateKey key)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = ReadOnlyScheduler.Client(protocol)
transport.open()

if cmd == 'getRoleSummary':
  if len(args) != 0:
    print('getRoleSummary requires 0 args')
    sys.exit(1)
  pp.pprint(client.getRoleSummary())

elif cmd == 'getJobSummary':
  if len(args) != 1:
    print('getJobSummary requires 1 args')
    sys.exit(1)
  pp.pprint(client.getJobSummary(args[0],))

elif cmd == 'getTasksStatus':
  if len(args) != 1:
    print('getTasksStatus requires 1 args')
    sys.exit(1)
  pp.pprint(client.getTasksStatus(eval(args[0]),))

elif cmd == 'getTasksWithoutConfigs':
  if len(args) != 1:
    print('getTasksWithoutConfigs requires 1 args')
    sys.exit(1)
  pp.pprint(client.getTasksWithoutConfigs(eval(args[0]),))

elif cmd == 'getPendingReason':
  if len(args) != 1:
    print('getPendingReason requires 1 args')
    sys.exit(1)
  pp.pprint(client.getPendingReason(eval(args[0]),))

elif cmd == 'getConfigSummary':
  if len(args) != 1:
    print('getConfigSummary requires 1 args')
    sys.exit(1)
  pp.pprint(client.getConfigSummary(eval(args[0]),))

elif cmd == 'getJobs':
  if len(args) != 1:
    print('getJobs requires 1 args')
    sys.exit(1)
  pp.pprint(client.getJobs(args[0],))

elif cmd == 'getQuota':
  if len(args) != 1:
    print('getQuota requires 1 args')
    sys.exit(1)
  pp.pprint(client.getQuota(args[0],))

elif cmd == 'populateJobConfig':
  if len(args) != 1:
    print('populateJobConfig requires 1 args')
    sys.exit(1)
  pp.pprint(client.populateJobConfig(eval(args[0]),))

elif cmd == 'getLocks':
  if len(args) != 0:
    print('getLocks requires 0 args')
    sys.exit(1)
  pp.pprint(client.getLocks())

elif cmd == 'getJobUpdateSummaries':
  if len(args) != 1:
    print('getJobUpdateSummaries requires 1 args')
    sys.exit(1)
  pp.pprint(client.getJobUpdateSummaries(eval(args[0]),))

elif cmd == 'getJobUpdateDetails':
  if len(args) != 1:
    print('getJobUpdateDetails requires 1 args')
    sys.exit(1)
  pp.pprint(client.getJobUpdateDetails(eval(args[0]),))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
